#Использовать "../internal/localization"
#Использовать "../../../internal/utils"

#Использовать 1commands
#Использовать asserts
#Использовать fs

#Область ОписаниеПеременных

Перем ЛокализованныеСтроки;

Перем ТаймаутОжидания;
Перем ПараметрыСоединения;

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Устанавливает параметры соединения с сервером отладки
//
// Параметры:
//   ПараметрПараметрыСоединения - ПараметрыСоединенияЗамера - Параметры соединения к серверу отладки
//
Процедура УстановитьПараметрыСоединения(ПараметрПараметрыСоединения) Экспорт
	
	// BSLLS:NestedFunctionInParameters-off
	Утверждения.ПроверитьРавенство(ТипЗнч(ПараметрПараметрыСоединения), Тип("ПараметрыСоединенияЗамера"),
		ЛокализованныеСтроки.УтверждениеПараметрыСоединенияТип);
	// BSLLS:NestedFunctionInParameters-on
	
	ПараметрыСоединения = ПараметрПараметрыСоединения;
	
КонецПроцедуры

// Запускает сбор данных покрытия
//
// Параметры:
//   ИмяФайлаРезультата - Строка - Имя файла для сохранения результатов
//   ПутьКПроекту - Строка - Путь к проекту исходных файлов
//   ПутьКИсходнымФайлам - Строка - Путь к исходным файлам внутри проектв
//
//  Возвращаемое значение:
//   Процесс - запущенный процесса сбора покрытия
//
Функция ЗапуститьСборПокрытия(ИмяФайлаРезультата, ПутьКПроекту = Неопределено, ПутьКИсходнымФайлам = Неопределено) Экспорт
	
	// BSLLS:NestedFunctionInParameters-off
	Утверждения.ПроверитьРавенство(ТипЗнч(ИмяФайлаРезультата), Тип("Строка"),
		ЛокализованныеСтроки.УтверждениеИмяФайлаРезультатаТип);
	
	Если ПутьКПроекту <> Неопределено Тогда
		Утверждения.ПроверитьРавенство(ТипЗнч(ПутьКПроекту), Тип("Строка"),
			ЛокализованныеСтроки.УтверждениеПутьКПроектуТип);
	КонецЕсли;
	
	Если ПутьКИсходнымФайлам <> Неопределено Тогда
		Утверждения.ПроверитьРавенство(ТипЗнч(ПутьКИсходнымФайлам), Тип("Строка"),
			ЛокализованныеСтроки.УтверждениеПутьКИсходнымФайламТип);
	КонецЕсли;
	// BSLLS:NestedFunctionInParameters-on
	
	Команда = КомандаЗамера();
	Команда.ДобавитьПараметр("start");
	
	Если ЗначениеЗаполнено(ПараметрыСоединения) Тогда
		ПараметрыСоединения.ДобавитьПараметрыКоманды(Команда);
	КонецЕсли;
	
	Команда.ДобавитьПараметр(СтрШаблон("--out=""%1""", ИмяФайлаРезультата));
	
	Если ПутьКПроекту <> Неопределено Тогда
		
		Команда.ДобавитьПараметр(СтрШаблон("--projectDir=""%1""", ПутьКПроекту));
		
		Если ПутьКИсходнымФайлам <> Неопределено Тогда
			Команда.ДобавитьПараметр(СтрШаблон("--srcDir=""%1""", ПутьКИсходнымФайлам));
		КонецЕсли;
	КонецЕсли;
	
	Процесс = Команда.ЗапуститьПроцесс();
	Возврат Процесс;
	
КонецФункции

// Останавливает сбор покрытия и завершает процесс сбора
//
Процедура ОстановитьСборПокрытия() Экспорт
	
	Команда = КомандаЗамера();
	Команда.ДобавитьПараметр("stop");
	
	Если ЗначениеЗаполнено(ПараметрыСоединения) Тогда
		ПараметрыСоединения.ДобавитьПараметрыКоманды(Команда);
	КонецЕсли;
	
	Команда.Исполнить();
	
КонецПроцедуры

// Формирует список строк к покрытию в формате genericCoverage
//
// Параметры:
//   ИмяФайлаРезультата - Строка - Имя файла для сохранения результатов
//   ПутьКПроекту - Строка - Путь к проекту исходных файлов
//   ПутьКИсходнымФайлам - Строка - Путь к исходным файлам внутри проектв
//
Процедура СформироватьСтрокиКПокрытию(ИмяФайлаРезультата, ПутьКПроекту, ПутьКИсходнымФайлам) Экспорт
	
	// BSLLS:NestedFunctionInParameters-off
	Утверждения.ПроверитьРавенство(ТипЗнч(ИмяФайлаРезультата), Тип("Строка"),
		ЛокализованныеСтроки.УтверждениеИмяФайлаРезультатаТип);
	
	Утверждения.ПроверитьРавенство(ТипЗнч(ПутьКПроекту), Тип("Строка"),
		ЛокализованныеСтроки.УтверждениеПутьКПроектуТип);
	
	Утверждения.ПроверитьЗаполненность(ПутьКПроекту,
		ЛокализованныеСтроки.УтверждениеПутьКПроектуЗаполненность);
	
	Утверждения.ПроверитьРавенство(ТипЗнч(ПутьКИсходнымФайлам), Тип("Строка"),
		ЛокализованныеСтроки.УтверждениеПутьКИсходнымФайламТип);
	
	Утверждения.ПроверитьЗаполненность(ПутьКИсходнымФайлам,
		ЛокализованныеСтроки.УтверждениеПутьКИсходнымФайламЗаполненность);
	// BSLLS:NestedFunctionInParameters-on
	
	ВременныйФайл = ПолучитьИмяВременногоФайла("xml");
	
	СоздатьПустойXML(ВременныйФайл);
	
	КонвертироватьПокрытие(ВременныйФайл, ПутьКПроекту, ПутьКИсходнымФайлам, ИмяФайлаРезультата);
	
	УдалитьФайлы(ВременныйФайл);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриСозданииОбъекта() Экспорт
	
	ЛокализованныеСтроки = ЛокализованныеРесурсыМенеджерПокрытияEDT.ЛокализованныеСтроки();
	
	ТаймаутОжидания = 30;
	ПараметрыСоединения = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция КомандаЗамера()
	
	КаталогCoverage41C = ПараметрыПриложения.КаталогCoverage41C();
	Если ПараметрыПриложения.ЭтоWindows() Тогда
		КомандаCoverage41C = ОбъединитьПути(КаталогCoverage41C, "bin", "Coverage41C.bat");
	Иначе
		КомандаCoverage41C = ОбъединитьПути(КаталогCoverage41C, "bin", "Coverage41C");
	КонецЕсли;
	
	Команда = Новый Команда();
	Команда.ПоказыватьВыводНемедленно(Истина);
	Команда.УстановитьИсполнениеЧерезКомандыСистемы(Ложь);
	Команда.УстановитьКоманду(КомандаCoverage41C);
	
	ПеременныеСредыCoverage41C = Новый Соответствие();
	ПеременныеСредыCoverage41C.Вставить("COVERAGE41_C_OPTS", "-Dfile.encoding=UTF-8");
	Команда.УстановитьПеременныеСреды(ПеременныеСредыCoverage41C);
	
	Возврат Команда;
	
КонецФункции

Процедура КонвертироватьПокрытие(ИмяФайлаПокрытия, КаталогПроекта, КаталогИсходниковКонфигурации, ФайлВывода)
	
	Команда = КомандаЗамера();
	Команда.ДобавитьПараметр("convert");
	Команда.ДобавитьПараметр(СтрШаблон("--convertFile=""%1""", ИмяФайлаПокрытия));
	
	Если ЗначениеЗаполнено(КаталогПроекта) Тогда
		Команда.ДобавитьПараметр(СтрШаблон("--projectDir=""%1""", КаталогПроекта));
	КонецЕсли;
	
	Команда.ДобавитьПараметр(СтрШаблон("--srcDir=""%1""", КаталогИсходниковКонфигурации));
	Команда.ДобавитьПараметр(СтрШаблон("--out=""%1""", ФайлВывода));
	
	Команда.Исполнить();
	
КонецПроцедуры

Процедура СоздатьПустойXML(ВременныйФайл)
	
	ЗаписьXML = Новый ЗаписьXML();
	ЗаписьXML.ОткрытьФайл(ВременныйФайл);
	
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	ЗаписьXML.ЗаписатьНачалоЭлемента("coverage");
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
	ЗаписьXML.Закрыть();
	
КонецПроцедуры

#КонецОбласти