#Использовать "../internal/localization"
#Использовать "../../../internal/utils"

#Использовать 1commands
#Использовать asserts
#Использовать fs

Перем КаталогEDT;
Перем ПредметОтладки;
Перем URLОтладки;

Перем ЛокализованныеСтроки;
Перем ТаймаутОжидания;

#Область ПрограммныйИнтерфейс

// Устанавливает сервер и имя предмета отладки для работы с сервером отладки
//
// Параметры:
//   ПредметОтладки - Строка - Имя предмета отладки на сервере
//   URLОтладки - Строка - Строка подключения к серверу отладки
//
Процедура УстановитьПараметрыОтладки(ПараметрПредметОтладки, ПараметрURLОтладки) Экспорт
	
	Утверждения.ПроверитьРавенство(ТипЗнч(ПараметрПредметОтладки), Тип("Строка"),
		ЛокализованныеСтроки.УтверждениеПредметОтладкиТип);
	
	Утверждения.ПроверитьРавенство(ТипЗнч(ПараметрURLОтладки), Тип("Строка"),
		ЛокализованныеСтроки.УтверждениеURLОтладкиТип);
	
	ПредметОтладки = ПараметрПредметОтладки;
	URLОтладки = ПараметрURLОтладки;
	
КонецПроцедуры

// Запускает сбор данных покрытия
//
// Параметры:
//   ИмяФайлаРезультата - Строка - Имя файла для сохранения результатов
//
//  Возвращаемое значение:
//   Число - идентификатор запущенного процесса сбора покрытия
//
Функция ЗапуститьСборПокрытия(ИмяФайлаРезультата, ПутьКПроекту = Неопределено, ПутьКИсходнымФайлам = Неопределено) Экспорт
	
	Утверждения.ПроверитьРавенство(ТипЗнч(ИмяФайлаРезультата), Тип("Строка"),
		ЛокализованныеСтроки.УтверждениеПредметОтладкиТип);
	
	Команда = КомандаЗамера();
	Команда.ДобавитьПараметр("start");
	Команда.ДобавитьПараметр(СтрШаблон("--infobase=""%1""", ПредметОтладки));
	Команда.ДобавитьПараметр(СтрШаблон("--debugger=""%1""", URLОтладки));
	Команда.ДобавитьПараметр(СтрШаблон("--out=""%1""", ИмяФайлаРезультата));
	
	Если ПутьКПроекту <> Неопределено Тогда
		
		Команда.ДобавитьПараметр(СтрШаблон("-P=""%1""", ПутьКПроекту));
		
		Если ПутьКИсходнымФайлам <> Неопределено Тогда
			Команда.ДобавитьПараметр(СтрШаблон("-s=""%1""", ПутьКИсходнымФайлам));
		КонецЕсли;
	КонецЕсли;
	
	Процесс = Команда.ЗапуститьПроцесс();
	
	ДождатьсяПоявленияФайла(ИмяФайлаРезультата);
	
	Возврат Процесс.Идентификатор;
	
КонецФункции

// Останавливает сбор покрытия и завершает процесс сбора
//
// Параметры:
//   ИдентификаторПроцесса - Число - идентификатор запущенного процесса сбора покрытия
//   ИмяФайлаРезультата - Строка - Имя файла для сохранения результатов
//
Процедура ОстановитьСборПокрытия(ИдентификаторПроцесса, ИмяФайла = "", ПодключениеКОтладчику = Неопределено) Экспорт
	
	Утверждения.ПроверитьРавенство(ТипЗнч(ИдентификаторПроцесса), Тип("Число"),
		ЛокализованныеСтроки.УтверждениеИдентификаторПроцессаТип);
	
	Утверждения.ПроверитьБольше(ИдентификаторПроцесса, 0,
		ЛокализованныеСтроки.УтверждениеИдентификаторПроцессаЗначение);
	
	Процесс = НайтиПроцессПоИдентификатору(ИдентификаторПроцесса);
	
	
	Если ЗначениеЗаполнено(ПодключениеКОтладчику) Тогда
		
		Команда = КомандаЗамера();
		Команда.ДобавитьПараметр("stop");
		Команда.ДобавитьПараметр(СтрШаблон("--infobase=""%1""", ПодключениеКОтладчику.ОтладчикИБ));
		Команда.ДобавитьПараметр(СтрШаблон("--debugger=""%1""", ПодключениеКОтладчику.ОтладчикСервер));
		Команда.Исполнить();
	КонецЕсли;
	
	Если Процесс = Неопределено Тогда
		ВызватьИсключение СтрШаблон(ЛокализованныеСтроки.ИсключениеПроцессНеНайден, XMLСтрока(ИдентификаторПроцесса));
	КонецЕсли;
	
	Процесс.Завершить();
	
	Если ЗначениеЗаполнено(ИмяФайла) Тогда
		ДождатьсяОсвобожденияФайла(ИмяФайла);
	КонецЕсли;
	
КонецПроцедуры

Процедура КонвертироватьПокрытие(ИмяФайлаПокрытия, КаталогПроекта, КаталогИсходниковКонфигурации, ФайлВывода) Экспорт
	
	Команда = КомандаЗамера();
	Команда.ДобавитьПараметр("convert");
	Команда.ДобавитьПараметр(СтрШаблон("--convertFile=""%1""", ИмяФайлаПокрытия));
	Команда.ДобавитьПараметр(СтрШаблон("--projectDir=""%1""", КаталогПроекта));
	Команда.ДобавитьПараметр(СтрШаблон("--srcDir=""%1""", КаталогИсходниковКонфигурации));
	Команда.ДобавитьПараметр(СтрШаблон("--out=""%1""", ФайлВывода));
	
	Команда.Исполнить();
	
КонецПроцедуры

Процедура СформироватьСтрокиКПокрытию(КаталогПроекта, КаталогИсходниковКонфигурации, ФайлВывода) Экспорт
	
	ВременныйФайл = ПолучитьИмяВременногоФайла("xml");

	СоздатьПустойXML(ВременныйФайл);

	КонвертироватьПокрытие(ВременныйФайл, КаталогПроекта, КаталогИсходниковКонфигурации, ФайлВывода);
	
	УдалитьФайлы(ВременныйФайл);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриСозданииОбъекта() Экспорт
	ЛокализованныеСтроки = ЛокализованныеРесурсыМенеджерПокрытияEDT.ЛокализованныеСтроки();
	ТаймаутОжидания = 30;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДождатьсяПоявленияФайла(ИмяФайла)
	
	ПределОжидания = ТекущаяУниверсальнаяДатаВМиллисекундах() + ТаймаутОжидания * 1000;
	
	Пока ТекущаяУниверсальнаяДатаВМиллисекундах() < ПределОжидания И Не ФС.ФайлСуществует(ИмяФайла) Цикл
		Приостановить(1000);
	КонецЦикла;
	
	Возврат ФС.ФайлСуществует(ИмяФайла);
	
КонецФункции

Функция ДождатьсяОсвобожденияФайла(ИмяФайла)
	
	ПределОжидания = ТекущаяУниверсальнаяДатаВМиллисекундах() + ТаймаутОжидания * 1000;
	
	ЧтениеТекста = Новый ЧтениеТекста;
	ФайлСвободен = Ложь;
	
	Пока ТекущаяУниверсальнаяДатаВМиллисекундах() < ПределОжидания И Не ФайлСвободен Цикл
		
		Попытка
			ЧтениеТекста.Открыть(ИмяФайла);
			ЧтениеТекста.Закрыть();
			ФайлСвободен = Истина;
		Исключение
			ФайлСвободен = Ложь;
		КонецПопытки;
		
		Приостановить(1000);
		
	КонецЦикла;
	
	Возврат ФайлСвободен;
	
КонецФункции

Функция КомандаЗамера()
	
	КаталогCoverage41C = ПараметрыПриложения.КаталогCoverage41C();
	Если ПараметрыПриложения.ЭтоWindows() Тогда
		КомандаCoverage41C = ОбъединитьПути(КаталогCoverage41C, "bin", "Coverage41C.bat");
	Иначе
		КомандаCoverage41C = ОбъединитьПути(КаталогCoverage41C, "bin", "Coverage41C");
	КонецЕсли;
	
	Команда = Новый Команда();
	Команда.УстановитьКоманду(КомандаCoverage41C);

	ПеременныеСредыCoverage41C = Новый Соответствие();
	ПеременныеСредыCoverage41C.Вставить("COVERAGE41_C_OPTS", "-Dfile.encoding=UTF-8");
	Команда.УстановитьПеременныеСреды(ПеременныеСредыCoverage41C);

	Возврат Команда;
	
КонецФункции

Процедура СоздатьПустойXML(ВременныйФайл)

	ЗаписьXML = Новый ЗаписьXML();
	ЗаписьXML.ОткрытьФайл(ВременныйФайл);
	
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	ЗаписьXML.ЗаписатьНачалоЭлемента("coverage");
	ЗаписьXML.ЗаписатьКонецЭлемента();

	ЗаписьXML.Закрыть();

КонецПроцедуры

#КонецОбласти