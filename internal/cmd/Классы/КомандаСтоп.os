
#Использовать "../../../pkg/edtcoverage"
#Использовать "../internal/localization"

Перем Лог;
Перем ЛокализованныеСтроки;

#Область КомандаПриложения

Процедура ОписаниеКоманды(Команда) Экспорт

	Команда.Опция("p pid", 0, ЛокализованныеСтроки.Идентификаторпроцесса)
		.ТЧисло();
	Команда.Опция("u debugger", "http://localhost:1550", "Сервер отладки")
		.ТСтрока();
	Команда.Опция("i infobase", "coverage_test", "Имя информационной базы")
		.ТСтрока();
		

КонецПроцедуры

Процедура ВыполнитьКоманду(Знач Команда) Экспорт

	МенеджерПокрытия = Новый МенеджерПокрытияEDT();

	ОписаниеТиповЧисло = Новый ОписаниеТипов("Число");
	Если Команда.ЗначениеОпции("debug") Тогда
		ПараметрыПриложения.ВключитьРежимОтладки();
	КонецЕсли;

	ПараметрИдентификаторПроцесса = Команда.ЗначениеОпции("pid");

	ОтладчикСервер = Команда.ЗначениеОпции("debugger");
	ОтладчикИБ = Команда.ЗначениеОпции("infobase");
	
	ПодключениеКОтладчику = Неопределено;
	Если ЗначениеЗаполнено(ОтладчикСервер) И ЗначениеЗаполнено(ОтладчикИБ) Тогда 
		ПодключениеКОтладчику = Новый Структура;
		ПодключениеКОтладчику.Вставить("ОтладчикСервер", ОтладчикСервер);
		ПодключениеКОтладчику.Вставить("ОтладчикИБ", ОтладчикИБ);
	КонецЕсли;

	МассивФайловPID = НайтиФайлы(КаталогВременныхФайлов(), "coverage.*.pid");
	Если МассивФайловPID.Количество() = 0 Тогда
		Лог.Предупреждение(ЛокализованныеСтроки.СообщениеНеНайденыPIDФайлы);
		Возврат;
	КонецЕсли;

	Для Каждого ФайлPID Из МассивФайловPID Цикл

		Массив = СтрРазделить(ФайлPID.ИмяБезРасширения, "."); 
		Если Массив.Количество() <> 2 Тогда
			Лог.Отладка(СтрШаблон(ЛокализованныеСтроки.СообщениеФайлНеЯвляетсяPIDФайлом, ФайлPID.ПолноеИмя));
			УдалитьФайлы(ФайлPID.ПолноеИмя);
			Продолжить;
		КонецЕсли;
		
		ИдентификаторПроцесса = ОписаниеТиповЧисло.ПривестиЗначение(Массив[1]);
		Если ИдентификаторПроцесса = 0 Тогда
			Лог.Отладка(СтрШаблон(ЛокализованныеСтроки.СообщениеИдентификаторНеЯвляетсяPID, ФайлPID.ПолноеИмя));
			УдалитьФайлы(ФайлPID.ПолноеИмя);
			Продолжить;
		КонецЕсли;

		Если ЗначениеЗаполнено(ПараметрИдентификаторПроцесса) И ИдентификаторПроцесса <> ПараметрИдентификаторПроцесса Тогда
			Продолжить;
		КонецЕсли;		 

		Лог.Информация(СтрШаблон(ЛокализованныеСтроки.СообщениеЗавершаемПроцессPID, ФайлPID.ПолноеИмя));
		Попытка

			МенеджерПокрытия.ОстановитьСборПокрытия(ИдентификаторПроцесса, "", ПодключениеКОтладчику);
			
			Лог.Отладка(СтрШаблон(ЛокализованныеСтроки.СообщениеЗавершенПроцессPID, ФайлPID.ПолноеИмя));
		Исключение

			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());

			ТекстСообщения = СтрШаблон(ЛокализованныеСтроки.СообщениеНеЗавершенПроцессPID, 
				ФайлPID.ПолноеИмя, ПодробноеПредставлениеОшибки);
			Лог.Предупреждение(ТекстСообщения);

		КонецПопытки;

		УдалитьФайлы(ФайлPID.ПолноеИмя);

	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриСозданииОбъекта() Экспорт
	Лог = ПараметрыПриложения.Лог();
	ЛокализованныеСтроки = ЛокализованныеРесурсыКомандаСтоп.ЛокализованныеСтроки();
КонецПроцедуры

#КонецОбласти
