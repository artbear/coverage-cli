
#Использовать "../../../vendor/yabr"

Перем ИмяФайлаЗамеров;
Перем Конвертер;
Перем ОбработчикЧтения;
Перем ОбработчикВывода;

#Область СлужебныйПрограммныйИнтерфейс

Процедура РазобратьЗамеры(ПараметрКонвертер) Экспорт
	
	Конвертер = ПараметрКонвертер;
	
	ОбработчикЧтения = Новый ЧтениеЗамераПроизводительности(ЭтотОбъект);
	ОбработчикЧтения.УстановитьИдентификатор("ОбработчикЧтения");
	ОбработчикЧтения.УстановитьПараметрОбработкиДанных("УровеньЭлементов", 3);

	ПараметрыЧтенияФайла = Новый Структура;
	ПараметрыЧтенияФайла.Вставить("ПутьКФайлу", ИмяФайлаЗамеров);
	ПараметрыЧтенияФайла.Вставить("УровниЗаписей", Новый Массив);
	ПараметрыЧтенияФайла.УровниЗаписей.Добавить(2);
	ПараметрыЧтенияФайла.УровниЗаписей.Добавить(3);

	ОбработчикДанных = Новый ЧтениеСкобкоФайла(ЭтотОбъект);
	ОбработчикДанных.УстановитьИдентификатор("АдаптерЗамеровPFF");
	ОбработчикДанных.УстановитьПараметрыОбработкиДанных(ПараметрыЧтенияФайла);
	ОбработчикДанных.ОбработатьДанные();
	
КонецПроцедуры

Функция Лог() Экспорт
	Возврат ПараметрыПриложения.Лог();
КонецФункции

Функция ПроверитьДопустимостьТипа(Знач Значение, Знач ДопустимыеТипы, Знач ШаблонТекстаОшибки = "") Экспорт
	
	ТипЗначения = ТипЗнч(Значение);

	// Утверждения.ПроверитьРавенство(ТипЗнч(ИмяФайла), Тип("Строка"), ЛокализованныеСтроки.УтверждениеИмяФайлаТип);


	// Если ТипЗнч(ДопустимыеТипы) = Тип("Строка") Тогда
	// 	МассивДопустимыхТипов = СтрРазделить(ДопустимыеТипы, ",");
	// ИначеЕсли ТипЗнч(ДопустимыеТипы) = Тип("Массив") Тогда
	// 	МассивДопустимыхТипов = ДопустимыеТипы;
	// Иначе
	// 	ВызватьИсключение СтрШаблон("Некорректно указан список допустимых типов, тип ""%1"" ожидается тип %2!",
	// 	                            Тип(ДопустимыеТипы),
	// 	                            """Строка"" или ""Массив""");
	// КонецЕсли;
	
	// Типы = Новый Соответствие();
	
	// СтрокаДопустимыхТипов = "";
	
	// Для Каждого ТекТип Из МассивДопустимыхТипов Цикл
	// 	ВремТип = ?(ТипЗнч(ТекТип) = Тип("Строка"), Тип(СокрЛП(ТекТип)), ТекТип);
	// 	Типы.Вставить(ВремТип, СокрЛП(ТекТип));
	// 	Если НЕ СтрокаДопустимыхТипов = "" Тогда
	// 		СтрокаДопустимыхТипов = СтрокаДопустимыхТипов +
	// 			?(МассивДопустимыхТипов.Найти(ТекТип) = МассивДопустимыхТипов.ВГраница(), " или ", ", ");
	// 	КонецЕсли;
	// КонецЦикла;
	
	// Если ШаблонТекстаОшибки = "" Тогда
	// 	ШаблонТекстаОшибки = "Некорректный тип значения ""%1"" ожидается тип %2!";
	// КонецЕсли;
	
	// Если Типы[ТипЗначения] = Неопределено Тогда
	// 	ВызватьИсключение СтрШаблон(ШаблонТекстаОшибки, СокрЛП(ТипЗначения), СтрокаДопустимыхТипов);
	// КонецЕсли;
	
	Возврат Истина;

КонецФункции

Процедура ПродолжениеОбработкиДанных(Знач Данные, Знач ИдОбработчика) Экспорт
	
	Если ИдОбработчика = "АдаптерЗамеровPFF" Тогда
		ОбработчикЧтения.УстановитьДанные(Данные);
		ОбработчикЧтения.ОбработатьДанные();
	ИначеЕсли ИдОбработчика = "ОбработчикЧтения" Тогда
		
		СтрокаЗамера = НовыйСтрокаЗамера();
		СтрокаЗамера.PropertyId = Данные.ВидМодуляИд;
		СтрокаЗамера.ObjectId = Данные.МодульИд;
		СтрокаЗамера.LineNo = Данные.НомерСтроки;
		СтрокаЗамера.ModuleName = ТипыКонтейнеровПрограммныхМодулей.Получить(Данные.ТипКонтейнераИд);
		СтрокаЗамера.ExtentionName = Данные.ИмяРасширения;
		СтрокаЗамера.URL = Данные.ИмяВнешнегоМодуля;
	
		Конвертер.РазобратьДанныеЗамера(СтрокаЗамера);
	
	Иначе
		Возврат;
	КонецЕсли;

КонецПроцедуры // ПродолжениеОбработкиДанных()

Процедура ЗавершениеОбработкиДанных(Знач ИдОбработчика) Экспорт
	
	Если ИдОбработчика = "АдаптерЗамеровPFF" Тогда
		ОбработчикЧтения.ЗавершениеОбработкиДанных();
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ЗавершениеОбработкиДанных()

Функция ЭтоWindows() Экспорт

	СистемнаяИнформация = Новый СистемнаяИнформация;
	ЭтоWindows = Найти(НРег(СистемнаяИнформация.ВерсияОС), "windows") > 0;

	Возврат ЭтоWindows;

КонецФункции

Функция НовыйСтрокаЗамера() Экспорт

	СтрокаЗамеров = Новый Структура;
	СтрокаЗамеров.Вставить("ExtentionName");
	СтрокаЗамеров.Вставить("ModuleName");
	СтрокаЗамеров.Вставить("URL");
	СтрокаЗамеров.Вставить("ObjectId");
	СтрокаЗамеров.Вставить("PropertyId");
	СтрокаЗамеров.Вставить("LineNo");

	Возврат СтрокаЗамеров;

КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриСозданииОбъекта(ПараметрИмяФайлаЗамеров)
	ИмяФайлаЗамеров = ПараметрИмяФайлаЗамеров;
КонецПроцедуры

#КонецОбласти